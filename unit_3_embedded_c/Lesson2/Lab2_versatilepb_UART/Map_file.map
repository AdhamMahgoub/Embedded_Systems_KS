
Allocating common symbols
Common symbol       size              file

y                   0x4               app.o

Memory Configuration

Name             Origin             Length             Attributes
MY_MEM           0x00000000         0x04000000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00010000                . = 0x10000

.startup        0x00010000       0x10
 startup.o(.text)
 .text          0x00010000       0x10 startup.o
                0x00010000                reset

.text           0x00010010       0x68
 *(.text)
 .text          0x00010010       0x18 app.o
                0x00010010                main
 .text          0x00010028       0x50 uart.o
                0x00010028                UART_Send_String

.glue_7         0x00010078        0x0
 .glue_7        0x00000000        0x0 linker stubs

.glue_7t        0x00010078        0x0
 .glue_7t       0x00000000        0x0 linker stubs

.vfp11_veneer   0x00010078        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x00010078        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x00010078        0x0
 .iplt          0x00000000        0x0 startup.o

.rodata         0x00010078        0x4
 *(.rodata)
 .rodata        0x00010078        0x4 app.o
                0x00010078                x

.rel.dyn        0x0001007c        0x0
 .rel.iplt      0x00000000        0x0 startup.o

.data           0x0001007c       0x64
 *(.data)
 .data          0x0001007c        0x0 startup.o
 .data          0x0001007c       0x64 app.o
                0x0001007c                string_buffer
 .data          0x000100e0        0x0 uart.o

.igot.plt       0x000100e0        0x0
 .igot.plt      0x00000000        0x0 startup.o

.bss            0x000100e0       0x18
 *(.bss)
 .bss           0x000100e0        0x0 startup.o
 .bss           0x000100e0        0x0 app.o
 .bss           0x000100e0        0x0 uart.o
 *(.comment)
 .comment       0x000100e0       0x11 app.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 uart.o
 *fill*         0x000100f1        0x3 
 COMMON         0x000100f4        0x4 app.o
                0x000100f4                y

.ARM            0x00010000       0x86
 *(.ARM.attributes)
 .ARM.attributes
                0x00010000       0x22 startup.o
 .ARM.attributes
                0x00010022       0x32 app.o
 .ARM.attributes
                0x00010054       0x32 uart.o

.debug          0x000100f8      0x480
 *(.debug_info)
 .debug_info    0x000100f8       0x5f startup.o
 .debug_info    0x00010157       0x98 app.o
 .debug_info    0x000101ef       0x5c uart.o
 *(.debug_abbrev)
 .debug_abbrev  0x0001024b       0x14 startup.o
 .debug_abbrev  0x0001025f       0x7d app.o
 .debug_abbrev  0x000102dc       0x51 uart.o
 *(.debug_loc)
 .debug_loc     0x0001032d       0x2c app.o
 .debug_loc     0x00010359       0x2c uart.o
 *(.debug_aranges)
 *fill*         0x00010385        0x3 
 .debug_aranges
                0x00010388       0x20 startup.o
 .debug_aranges
                0x000103a8       0x20 app.o
 .debug_aranges
                0x000103c8       0x20 uart.o
 *(.debug_line)
 .debug_line    0x000103e8       0x3a startup.o
 .debug_line    0x00010422       0x35 app.o
 .debug_line    0x00010457       0x3d uart.o
 *(.debug_str)
 .debug_str     0x00010494       0x69 app.o
 .debug_str     0x000104fd       0x24 uart.o
                                 0x6b (size before relaxing)
 *(.debug_frame)
 *fill*         0x00010521        0x3 
 .debug_frame   0x00010524       0x2c app.o
 .debug_frame   0x00010550       0x28 uart.o
                0x00011578                . = (. + 0x1000)
                0x00011578                stack_top = .
LOAD app.o
LOAD uart.o
LOAD startup.o
OUTPUT(learn_in_depth.elf elf32-littlearm)
